var U=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var q=Object.prototype.hasOwnProperty;var J=(l,r)=>{for(var e in r)U(l,e,{get:r[e],enumerable:!0})},K=(l,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of j(r))!q.call(l,i)&&i!==e&&U(l,i,{get:()=>r[i],enumerable:!(t=_(r,i))||t.enumerable});return l};var X=l=>K(U({},"__esModule",{value:!0}),l);var ee={};J(ee,{default:()=>W});module.exports=X(ee);var f=require("obsidian");var g=require("obsidian"),A=class extends g.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new g.Setting(e).setName("Show calendar component").setDesc("Show the calendar component in stream notes").addToggle(i=>i.setValue(this.plugin.settings.showCalendarComponent).onChange(async a=>{this.plugin.settings.showCalendarComponent=a,await this.plugin.saveSettings(),this.plugin.refreshAllCalendarComponents(),new g.Notice(`Calendar component ${a?"shown":"hidden"}`)})),new g.Setting(e).setName("Reuse current tab for calendar navigation").setDesc("When enabled, calendar navigation will reuse the current tab instead of opening new tabs").addToggle(i=>i.setValue(this.plugin.settings.reuseCurrentTab).onChange(async a=>{this.plugin.settings.reuseCurrentTab=a,await this.plugin.saveSettings(),new g.Notice(`Calendar navigation will ${a?"reuse":"open new"} tabs`)})),new g.Setting(e).setName("Streams").setHeading(),new g.Setting(e).setName("Add stream").setDesc("Create a new note stream").addButton(i=>i.setButtonText("Add stream").setCta().onClick(async()=>{let a={id:crypto.randomUUID(),name:"New Stream",folder:"",icon:"file-text",viewIcon:"layout-dashboard",showTodayInRibbon:!0,showFullStreamInRibbon:!1,addCommand:!1,addViewCommand:!1,showTodayBorder:!0,showViewBorder:!0,todayBorderColor:"var(--text-accent)",viewBorderColor:"var(--text-success)"};this.plugin.settings.streams.push(a),await this.plugin.saveSettings(!0),this.display()}));let t=e.createDiv("streams-plugin-container");this.plugin.settings.streams.forEach((i,a)=>{let n=this.createStreamCard(t,i,a);this.addStreamSettings(n,i,a)})}createStreamCard(e,t,i){let a=e.createDiv("streams-plugin-card");return a.createEl("h3",{text:t.name}),a}addStreamSettings(e,t,i){new g.Setting(e).setName("Name").addText(a=>a.setValue(t.name).onChange(async n=>{t.name=n}).then(n=>{n.inputEl.addEventListener("blur",async()=>{this.plugin.addStreamViewCommand(t),await this.plugin.saveSettings()})})),new g.Setting(e).setName("Folder").setDesc("Select or type a folder path").addSearch(a=>{a.setValue(t.folder).setPlaceholder("folder/path").onChange(async n=>{let s=n.split(/[/\\]/).filter(Boolean).join("/"),o=await this.validateFolderPath(s);a.inputEl.removeClass("streams-folder-valid"),a.inputEl.removeClass("streams-folder-invalid"),n===""||(o?a.inputEl.addClass("streams-folder-valid"):a.inputEl.addClass("streams-folder-invalid")),t.folder=s,await this.plugin.saveSettings()})}),e.createEl("h4",{text:"Ribbon controls",cls:"streams-setting-header"}),new g.Setting(e).setName("Open today in ribbon").setDesc('Show the "Open Today" button in the sidebar ribbon').addToggle(a=>a.setValue(t.showTodayInRibbon).onChange(async n=>{t.showTodayInRibbon=n,this.plugin.updateStreamTodayIcon(t),await this.plugin.saveSettings()})),new g.Setting(e).setName("Today icon").setDesc('Icon for the "Open Today" ribbon button').setClass("streams-setting-indent").addDropdown(a=>{this.populateIconDropdown(a),a.setValue(t.icon).onChange(async n=>{t.icon=n,await this.plugin.saveSettings(!0)})}),new g.Setting(e).setName("Show today border").setDesc("Display a colored border on the left side of the Today icon").setClass("streams-setting-indent").addToggle(a=>{var n;return a.setValue((n=t.showTodayBorder)!=null?n:!0).onChange(async s=>{t.showTodayBorder=s,this.plugin.updateStreamTodayIcon(t),await this.plugin.saveSettings(),this.display()})}),t.showTodayBorder&&new g.Setting(e).setName("Border color").setClass("streams-setting-double-indent").addText(a=>{var n;return a.setValue((n=t.todayBorderColor)!=null?n:"var(--text-accent)").setPlaceholder("var(--text-accent)").onChange(async s=>{t.todayBorderColor=s}).then(s=>{s.inputEl.addEventListener("blur",async()=>{this.plugin.updateStreamTodayIcon(t),await this.plugin.saveSettings()})})}),new g.Setting(e).setName("View full stream in ribbon").setDesc('Show the "View Full Stream" button in the sidebar ribbon').addToggle(a=>a.setValue(t.showFullStreamInRibbon).onChange(async n=>{t.showFullStreamInRibbon=n,this.plugin.updateStreamViewIcon(t),await this.plugin.saveSettings()})),new g.Setting(e).setName("View icon").setDesc('Icon for the "View Full Stream" ribbon button').setClass("streams-setting-indent").addDropdown(a=>{this.populateIconDropdown(a),a.setValue(t.viewIcon||t.icon).onChange(async n=>{t.viewIcon=n,await this.plugin.saveSettings(!0)})}),new g.Setting(e).setName("Show view border").setDesc("Display a colored border on the left side of the View icon").setClass("streams-setting-indent").addToggle(a=>{var n;return a.setValue((n=t.showViewBorder)!=null?n:!0).onChange(async s=>{t.showViewBorder=s,this.plugin.updateStreamViewIcon(t),await this.plugin.saveSettings(),this.display()})}),t.showViewBorder&&new g.Setting(e).setName("Border color").setClass("streams-setting-double-indent").addText(a=>{var n;return a.setValue((n=t.viewBorderColor)!=null?n:"var(--text-success)").setPlaceholder("var(--text-success)").onChange(async s=>{t.viewBorderColor=s}).then(s=>{s.inputEl.addEventListener("blur",async()=>{this.plugin.updateStreamViewIcon(t),await this.plugin.saveSettings()})})}),new g.Setting(e).setName("Add command: open today").setDesc("Add this stream to the command palette").addToggle(a=>{var n;return a.setValue((n=t.addCommand)!=null?n:!1).onChange(async s=>{t.addCommand=s,this.plugin.toggleStreamCommand(t),s&&setTimeout(()=>{this.plugin.initializeStreamCommands(),new g.Notice(`Added "${t.name}, today" to command palette`)},100),await this.plugin.saveSettings()})}),new g.Setting(e).setName("Add command: view full stream").setDesc("Add a view command to the command palette").addToggle(a=>{var n;return a.setValue((n=t.addViewCommand)!=null?n:!1).onChange(async s=>{t.addViewCommand=s,this.plugin.toggleStreamViewCommand(t),s&&setTimeout(()=>{this.plugin.initializeStreamCommands(),new g.Notice(`Added "${t.name}, full stream" to command palette`)},100),await this.plugin.saveSettings()})}),new g.Setting(e).setName("Delete stream").setDesc("Permanently remove this stream").addButton(a=>a.setButtonText("Delete").setWarning().onClick(async()=>{this.plugin.log.debug(`Deleting stream ${t.id} (${t.name})`),this.plugin.settings.streams.splice(i,1),await this.plugin.saveSettings(!0),this.plugin.removeStreamCommand(t.id),this.plugin.removeStreamViewCommand(t.id),this.display()}))}populateIconDropdown(e){Object.entries({"Files & documents":["file-text","file","files","folder","book","notebook","diary"],Communication:["message-circle","message-square","mail","inbox","send"],"Time & planning":["alarm-check","calendar","clock","timer","history"],"UI elements":["home","settings","search","bookmark","star","heart","layout-dashboard"],Content:["text","edit","pencil","pen","list","check-square"],Media:["image","video","music","camera"],Weather:["sun","moon","cloud","umbrella"],Misc:["user","users","tag","flag","bookmark","link"]}).forEach(([i,a])=>{e.addOption(`---${i}---`,i),a.forEach(n=>e.addOption(n,n))})}async validateFolderPath(e){if(!e)return!1;try{let i=this.app.vault.getAbstractFileByPath(e)instanceof g.TFolder;if(!i){let a=e.split("/").slice(0,-1).join("/");if(a)return this.app.vault.getAbstractFileByPath(a)instanceof g.TFolder}return i}catch(t){return this.plugin.log.error("Error validating folder path:",t),!1}}};var F=require("obsidian");var E=(a=>(a[a.DEBUG=0]="DEBUG",a[a.INFO=1]="INFO",a[a.WARN=2]="WARN",a[a.ERROR=3]="ERROR",a[a.NONE=4]="NONE",a))(E||{}),u=class{constructor(r){this.enabled=!1;this.level=1;this.prefix=r?`[${r}] `:""}isEnabled(){return this.enabled}on(r=1){this.enabled=!0,typeof r=="string"?this.level=E[r]:this.level=r,this.info(`Logging enabled at level: ${E[this.level]}`)}off(){this.enabled=!1,this.level=4,this.info("Logging disabled")}static parseLogLevel(r){if(typeof r=="boolean")return r;switch(r.toUpperCase()){case"DEBUG":return 0;case"INFO":return 1;case"WARN":return 2;case"ERROR":return 3;case"NONE":return 4;default:return 1}}setLogging(r){this.debug("setLogging called with:",r);let e=u.parseLogLevel(r);this.debug("parsed level:",e),typeof e=="boolean"?(this.enabled=e,this.level=1,this.debug(`Logging ${e?"enabled":"disabled"} (level: ${E[this.level]})`),this.debug("Current state:",{enabled:this.enabled,level:this.level})):(this.enabled=!0,this.level=e,this.debug(`Logging level set to ${E[this.level]}`),this.debug("Current state:",{enabled:this.enabled,level:this.level}))}debug(r,...e){!this.enabled||this.level>0||console.debug(this.prefix+r,...e)}info(r,...e){!this.enabled||this.level>1||console.log(this.prefix+r,...e)}warn(r,...e){!this.enabled||this.level>2||console.warn(this.prefix+r,...e)}error(r,...e){!this.enabled||this.level>3||console.error(this.prefix+r,...e)}trace(r,...e){this.enabled&&console.trace(this.prefix+r,...e)}group(r){this.enabled&&console.group(this.prefix+(r||""))}groupEnd(){this.enabled&&console.groupEnd()}table(r,e){this.enabled&&console.table(r,e)}time(r){this.enabled&&console.time(this.prefix+r)}timeEnd(r){this.enabled&&console.timeEnd(this.prefix+r)}};var S=require("obsidian");var C=require("obsidian");var b="streams-create-file-view",L=class extends C.ItemView{constructor(e,t,i,a,n){super(e);this.log=new u;this.app=t,this.filePath=i,this.stream=a,this.date=n}getViewType(){return b}getDisplayText(){var e;try{let t=this.filePath.split("/").pop()||"",i=this.extractDateFromFilenameString(t);if(i){let a=this.formatTitleDate(i);return this.stream&&this.stream.name?`Streams: ${this.stream.name}, today - ${a}`:a}return t.replace(".md","")}catch(t){return this.log.error("Error formatting display text:",t),((e=this.filePath.split("/").pop())==null?void 0:e.replace(".md",""))||""}}getState(){let e=this.date instanceof Date?this.date.toISOString():new Date().toISOString();return{filePath:this.filePath,stream:this.stream,date:e}}async setState(e,t){if(e){this.log.debug(`Setting state with: ${JSON.stringify(e)}`);let i=this.filePath,a=this.date?new Date(this.date.getTime()):null;this.filePath=e.filePath||this.filePath,this.stream=e.stream||this.stream;let n=!1;if(e.date)try{if(typeof e.date=="string")this.date=new Date(e.date),this.log.debug(`Parsed date from string: ${this.date.toISOString()}`);else if(e.date instanceof Date)this.date=e.date,this.log.debug(`Used date object directly: ${this.date.toISOString()}`);else{let d=this.filePath.match(/(\d{4}-\d{2}-\d{2})\.md$/);if(d&&d[1]){let[c,h,m]=d[1].split("-").map(w=>parseInt(w,10));this.date=new Date(c,h-1,m),this.log.debug(`Extracted date from filepath: ${this.date.toISOString()}`)}else this.date=new Date,this.log.debug(`Using current date as fallback: ${this.date.toISOString()}`)}a?n=a.getTime()!==this.date.getTime():n=!0}catch(d){this.log.error(`Error parsing date: ${d}`),this.date=new Date}let s=i!==this.filePath,o=t&&t.isTitleRefresh;(s||n)&&!o&&(this.log.debug("State changed significantly, refreshing view"),setTimeout(()=>{this.refreshView(),this.app.workspace.trigger("streams-create-file-state-changed",this)},0))}}extractDateFromFilenameString(e){let t=e.match(/(\d{4}-\d{2}-\d{2})\.md$/);if(t&&t[1]){let[i,a,n]=t[1].split("-").map(o=>parseInt(o,10)),s=new Date(i,a-1,n);if(!isNaN(s.getTime()))return s}return null}extractDateFromFilename(){let e=this.extractDateFromFilenameString(this.filePath);e?(this.date=e,this.log.debug(`Extracted date from filename fallback: ${this.date.toISOString()}`)):(this.date=new Date,this.log.debug(`Using today as final fallback: ${this.date.toISOString()}`))}async onOpen(){this.contentEl.empty(),this.contentEl.addClass("streams-create-file-container");let e=this.extractDateFromFilenameString(this.filePath);e&&(!this.date||this.date.toDateString()!==e.toDateString())&&(this.log.debug(`Updating date from file path: ${e.toISOString()}`),this.date=e);let t=this.contentEl.createDiv("streams-create-file-content"),i=t.createDiv("streams-create-file-icon");(0,C.setIcon)(i,"file-plus");let a=t.createDiv("streams-create-file-stream-container"),n=a.createSpan("streams-create-file-stream-icon");(0,C.setIcon)(n,this.stream.icon||"book"),a.createSpan("streams-create-file-stream").setText(this.stream.name);let o=t.createDiv("streams-create-file-date");this.log.debug(`Date for formatting: ${this.date.toISOString()}`),(!(this.date instanceof Date)||isNaN(this.date.getTime()))&&(this.log.error("Invalid date object, creating a new one"),this.extractDateFromFilename());let d=this.formatDate(this.date);this.log.debug(`Formatted date for display: ${d}`),o.setText(d),t.createDiv("streams-create-file-button-container").createEl("button",{cls:"mod-cta streams-create-file-button",text:"Create file"}).addEventListener("click",async()=>{await this.createAndOpenFile()})}formatTitleDate(e){return e.toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"})}formatDate(e){this.log.debug(`Formatting date: ${e.toISOString()}`);try{return e.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}catch(t){return this.log.error(`Error formatting date: ${t}`),"Invalid Date"}}async createAndOpenFile(){try{let e=this.filePath.substring(0,this.filePath.lastIndexOf("/"));if(e)try{this.app.vault.getAbstractFileByPath(e)||await this.app.vault.createFolder(e)}catch(i){this.log.debug("Using existing folder:",e)}let t=await this.app.vault.create(this.filePath,"");t instanceof C.TFile&&await this.leaf.openFile(t)}catch(e){this.log.error("Error creating file:",e)}}async onClose(){this.contentEl.empty()}async refreshView(){this.contentEl.empty(),await this.onOpen(),this.updateTabTitle(),this.app.workspace.trigger("layout-change")}updateTabTitle(){try{this.log.debug("Updating tab title"),this.leaf.setViewState({type:this.getViewType(),state:this.getState()},{history:!1,isTitleRefresh:!0}),this.log.debug(`Updated tab title to: ${this.getDisplayText()}`)}catch(e){this.log.error("Error updating tab title:",e)}}};var p=new u;function Q(l){return(0,S.normalizePath)(l).split("/").filter(Boolean).join("/")}function Y(l){let r=l.getFullYear(),e=String(l.getMonth()+1).padStart(2,"0"),t=String(l.getDate()).padStart(2,"0");return`${r}-${e}-${t}`}async function M(l,r,e=new Date,t=!1){if(p.debug("==== OPEN STREAM DATE START ===="),p.debug(`Date provided: ${e.toISOString()}`),p.debug(`Reuse current tab: ${t}`),!(e instanceof Date)||isNaN(e.getTime())){p.error(`Invalid date provided: ${e}`);return}let i=`${Y(e)}.md`;p.debug(`Formatted date: ${Y(e)}`);let a=Q(r.folder),n=a?`${a}/${i}`:i;p.debug(`Looking for file at path: ${n}`);let s=l.vault.getAbstractFileByPath(n);if(p.debug(`File exists: ${!!s}`),!s){if(p.debug(`File not found: ${n}, showing create file view`),a)try{l.vault.getAbstractFileByPath(a)||(await l.vault.createFolder(a),p.debug(`Created folder: ${a}`))}catch(h){p.debug("Using existing folder:",a)}let o=null;if(t){let h=l.workspace.activeLeaf;if(h)o=h,p.debug("Reusing current active leaf for CreateFileView (reuseCurrentTab enabled)");else{let m=l.workspace.getLeavesOfType(b);m.length>0?(o=m[0],p.debug("Reusing existing CreateFileView leaf")):(o=l.workspace.getLeaf("tab"),p.debug("Created a new leaf for CreateFileView"))}}else{let h=l.workspace.getLeavesOfType(b);h.length>0?(o=h[0],p.debug("Reusing existing CreateFileView leaf")):(o=l.workspace.getLeaf("tab"),p.debug("Created a new leaf for CreateFileView"))}let c=l.viewRegistry;c&&!c.getViewCreatorByType(b)&&(c.registerView(b,h=>new L(h,l,n,r,e)),p.debug("Registered CreateFileView")),await o.setViewState({type:b,state:{filePath:n,stream:r,date:e.toISOString()}}),p.debug(`Set view state with date: ${e.toISOString()} for file: ${n}`),l.workspace.setActiveLeaf(o,{focus:!0}),p.debug("==== OPEN STREAM DATE END (create view) ====");return}if(s instanceof S.TFile)try{let o=null;if(t){let d=l.workspace.activeLeaf;if(d)o=d,p.debug("Reusing current active leaf for markdown view (reuseCurrentTab enabled)");else{let c=l.workspace.getLeavesOfType("markdown").find(h=>{try{let m=h.view,w=m==null?void 0:m.file;if(!w||!s)return!1;let y=(0,S.normalizePath)(w.path),I=(0,S.normalizePath)(s.path);return y===I}catch(m){return p.debug("Error comparing files:",m),!1}});c?(o=c,p.debug("Found existing leaf with same file")):(o=l.workspace.getLeaf("tab"),p.debug("Created a new leaf for markdown view"))}}else{let d=l.workspace.getLeavesOfType("markdown").find(c=>{try{let h=c.view,m=h==null?void 0:h.file;if(!m||!s)return!1;let w=(0,S.normalizePath)(m.path),y=(0,S.normalizePath)(s.path);return w===y}catch(h){return p.debug("Error comparing files:",h),!1}});d?(o=d,p.debug("Found existing leaf with same file")):(o=l.workspace.getLeaf("tab"),p.debug("Created a new leaf for markdown view"))}o&&(await o.openFile(s),l.workspace.setActiveLeaf(o,{focus:!0}))}catch(o){p.error("Error opening stream date:",o)}}var R=new u,V=class{constructor(r,e,t,i=!1){this.app=r;this.stream=e;this.date=t;this.reuseCurrentTab=i}async execute(){if(R.debug(`Opening ${this.date.toDateString()} for stream: ${this.stream.name}`),R.debug(`Reuse current tab: ${this.reuseCurrentTab}`),!(this.date instanceof Date)||isNaN(this.date.getTime())){R.error(`Invalid date provided: ${this.date}`);return}let r=this.formatDateForLogging(this.date);R.debug(`Formatted date for stream: ${r}`),await M(this.app,this.stream,this.date,this.reuseCurrentTab)}formatDateForLogging(r){let e=r.getFullYear(),t=String(r.getMonth()+1).padStart(2,"0"),i=String(r.getDate()).padStart(2,"0");return`${e}-${t}-${i}`}};var H=new u,D=class{constructor(r,e,t=!1){this.app=r;this.stream=e;this.reuseCurrentTab=t}async execute(){H.debug(`Opening today's note for stream: ${this.stream.name}`),H.debug(`Reuse current tab: ${this.reuseCurrentTab}`),await M(this.app,this.stream,new Date,this.reuseCurrentTab)}};var k=class extends F.Component{constructor(e,t,i,a=!1){super();this.expanded=!1;this.currentDate=new Date;this.log=new u;this.grid=null;this.currentViewedDate=null;this.log.debug("Creating calendar component for stream:",t.name),this.selectedStream=t,this.app=i,this.reuseCurrentTab=a,this.component=document.createElement("div"),this.component.addClass("streams-calendar-component");let n=null,s=e.view.getViewType();if(this.log.debug(`Creating calendar component for view type: ${s}`),s==="markdown"){let o=e.view;n=o.contentEl;let d=o.file;if(d){let c=d.basename.match(/^\d{4}-\d{2}-\d{2}/);c&&(this.currentViewedDate=c[0])}this.component.addClass("streams-calendar-component-fixed")}else if(s===b){n=e.view.contentEl;try{let d=e.view.getState();if(d&&d.date){let c=d.date;this.currentViewedDate=c.split("T")[0],this.log.debug(`Set currentViewedDate from state: ${this.currentViewedDate}`)}}catch(d){this.log.error("Error getting date from CreateFileView state:",d)}}else n=e.view.contentEl,this.component.addClass("streams-calendar-component-fixed");if(!n){this.log.error("Could not find content container");return}n.addClass("streams-markdown-view-content"),n.appendChild(this.component),this.fileModifyHandler=this.handleFileModify.bind(this),this.registerEvent(this.app.vault.on("modify",this.fileModifyHandler)),this.initializeComponent()}handleFileModify(e){let t=this.selectedStream.folder.split(/[/\\]/).filter(Boolean),i=e.path.split(/[/\\]/).filter(Boolean);t.every((n,s)=>t[s]===i[s])&&this.grid&&(this.updateCalendarGrid(this.grid),this.updateTodayButton())}initializeComponent(){let e=this.component.createDiv("streams-calendar-collapsed");e.addEventListener("click",v=>{v.stopPropagation(),this.toggleExpanded(e,o)}),e.createDiv("streams-calendar-label").setText(this.selectedStream.name);let i=e.createDiv("streams-calendar-nav-controls"),a=i.createDiv("streams-calendar-day-nav prev-day");a.setText("\u2190"),a.setAttribute("aria-label","Previous day"),a.addEventListener("click",async v=>{v.stopPropagation(),this.log.debug("LEFT ARROW CLICKED - Going to PREVIOUS day"),await this.navigateToAdjacentDay(-1)});let n=i.createDiv("streams-calendar-today-button");this.todayButton=n,this.updateTodayButton();let s=i.createDiv("streams-calendar-day-nav next-day");s.setText("\u2192"),s.setAttribute("aria-label","Next day"),s.addEventListener("click",async v=>{v.stopPropagation(),this.log.debug("RIGHT ARROW CLICKED - Going to NEXT day"),await this.navigateToAdjacentDay(1)});let o=this.component.createDiv("streams-calendar-expanded"),d=o.createDiv("streams-calendar-top-nav"),c=d.createDiv("streams-calendar-today-nav");c.setText("Today"),d.createDiv("streams-calendar-name").setText(this.selectedStream.name);let m=d.createDiv("streams-calendar-back");(0,F.setIcon)(m,"chevron-up"),m.setAttr("aria-label","Collapse calendar");let w=o.createDiv("streams-calendar-header"),y=w.createDiv("streams-calendar-nav");y.setText("\u2190");let I=w.createDiv("streams-calendar-date");I.setText(this.formatMonthYear(this.currentDate));let z=w.createDiv("streams-calendar-nav");z.setText("\u2192");let $=o.createDiv("streams-calendar-grid");this.grid=$,this.updateCalendarGrid($),y.addEventListener("click",()=>{this.currentDate.setMonth(this.currentDate.getMonth()-1),I.setText(this.formatMonthYear(this.currentDate)),this.updateCalendarGrid($)}),z.addEventListener("click",()=>{this.currentDate.setMonth(this.currentDate.getMonth()+1),I.setText(this.formatMonthYear(this.currentDate)),this.updateCalendarGrid($)}),m.addEventListener("click",v=>{v.stopPropagation(),this.toggleExpanded(e,o)}),c.addEventListener("click",async v=>{v.stopPropagation(),await new D(this.app,this.selectedStream,this.reuseCurrentTab).execute(),this.currentDate=new Date,I.setText(this.formatMonthYear(this.currentDate)),this.updateCalendarGrid($)}),document.addEventListener("click",v=>{this.expanded&&!this.component.contains(v.target)&&this.toggleExpanded(e,o)}),document.addEventListener("keydown",v=>{v.key==="Escape"&&this.expanded&&(v.preventDefault(),v.stopPropagation(),this.toggleExpanded(e,o))})}updateTodayButton(){if(this.log.debug(`Updating today button with currentViewedDate: ${this.currentViewedDate}`),!this.currentViewedDate){let i=new Date;this.todayButton.setText(this.formatDate(i)),this.log.debug(`No current viewed date, showing today: ${this.formatDate(i)}`);return}let t=new Date().toISOString().split("T")[0];if(this.currentViewedDate===t)this.todayButton.setText("TODAY"),this.log.debug('Current date is today, showing "TODAY"');else{let i=this.parseViewedDate(this.currentViewedDate),a=this.formatDate(i);this.todayButton.setText(a),this.log.debug(`Current date is not today, showing formatted date: ${a}`)}}async getContentIndicator(e){let t=e.getFullYear(),i=String(e.getMonth()+1).padStart(2,"0"),a=String(e.getDate()).padStart(2,"0"),n=`${t}-${i}-${a}.md`,s=this.selectedStream.folder.split(/[/\\]/).filter(Boolean).join("/"),o=s?`${s}/${n}`:n,d=this.app.vault.getAbstractFileByPath(o);if(!(d instanceof F.TFile))return{exists:!1,size:"small"};let c=d.stat.size,h;return c<1024?h="small":c<5120?h="medium":h="large",{exists:!0,size:h}}async updateCalendarGrid(e){e.empty();let t=this.getDaysInMonth(this.currentDate.getFullYear(),this.currentDate.getMonth()),i=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),1).getDay();for(let a=0;a<7;a++){let n=e.createDiv("streams-calendar-day-header");n.textContent=["Su","Mo","Tu","We","Th","Fr","Sa"][a]}for(let a=0;a<i;a++)e.createDiv("streams-calendar-day empty");for(let a=1;a<=t;a++){let n=e.createDiv("streams-calendar-day"),s=n.createDiv("streams-date-container");s.textContent=String(a);let o=n.createDiv("streams-dot-container"),d=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),a);d.toISOString().split("T")[0]===this.currentViewedDate&&n.addClass("viewed");let h=await this.getContentIndicator(d);if(h.exists){let w=h.size==="small"?1:h.size==="medium"?2:3;for(let y=0;y<w;y++)o.createDiv("streams-content-dot")}this.isToday(d)&&n.addClass("today");let m=w=>{w.preventDefault(),w.stopPropagation(),this.selectDate(a)};n.addEventListener("click",m),n.addEventListener("touchend",m)}}formatDate(e){return e.toLocaleDateString("en-US",{month:"short",day:"numeric"})}formatMonthYear(e){return e.toLocaleDateString("en-US",{month:"long",year:"numeric"})}isToday(e){let t=new Date;return e.getDate()===t.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()}async selectDate(e){let t=new Date(this.currentDate.getFullYear(),this.currentDate.getMonth(),e);this.currentViewedDate=t.toISOString().split("T")[0],await new V(this.app,this.selectedStream,t,this.reuseCurrentTab).execute(),this.updateTodayButton()}toggleExpanded(e,t){if(this.expanded=!this.expanded,t.toggleClass("streams-calendar-expanded-active",this.expanded),e.toggleClass("streams-today-button-expanded",this.expanded),this.expanded){let i=this.grid;i&&setTimeout(()=>{this.updateCalendarGrid(i)},10)}}destroy(){this.log.debug("Destroying calendar component"),this.component&&this.component.parentElement&&this.component.remove()}async navigateToAdjacentDay(e){if(this.currentViewedDate){let t=this.parseViewedDate(this.currentViewedDate);this.log.debug(`Current date before navigation: ${t.toISOString()}`);let i=new Date(t);i.setDate(i.getDate()+e),this.log.debug(`Target date: ${i.toISOString()}`),await new V(this.app,this.selectedStream,i,this.reuseCurrentTab).execute()}else{let t=new Date;t.setDate(t.getDate()+e);let i=e>0?"tomorrow":"yesterday";this.log.debug(`No current date, going to ${i}: ${t.toISOString()}`),await new V(this.app,this.selectedStream,t,this.reuseCurrentTab).execute()}}setCurrentViewedDate(e){if(this.log.debug(`Setting currentViewedDate explicitly to: ${e}`),this.currentViewedDate=e,e){let[t,i,a]=e.split("-").map(n=>parseInt(n,10));this.currentDate=new Date(t,i-1,1)}this.updateTodayButton(),this.grid&&this.updateCalendarGrid(this.grid)}parseViewedDate(e){let[t,i,a]=e.split("-").map(n=>parseInt(n,10));return new Date(t,i-1,a)}getDaysInMonth(e,t){return new Date(e,t,0).getDate()}};var B=require("obsidian"),N=class extends B.Modal{constructor(e,t,i){super(e);this.streams=t,this.onChoose=i}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"Select stream"}),this.streams.forEach(t=>{new B.Setting(e).setName(t.name).setDesc(t.folder).addButton(i=>i.setButtonText("Select").onClick(()=>{this.onChoose(t),this.close()}))}),new B.Setting(e).addButton(t=>t.setButtonText("Cancel").onClick(()=>{this.onChoose(null),this.close()}))}onClose(){let{contentEl:e}=this;e.empty()}};var x=require("obsidian");var T="stream-view",O=class extends x.ItemView{constructor(e,t,i){super(e);this.isLoading=!1;this.olderDates=[];this.noMoreContent=!1;this.observer=null;this.app=t,this.stream=i,this.log=new u}getViewType(){return T}getDisplayText(){return`Streams: ${this.stream.name}, full`}getIcon(){return this.stream.viewIcon||this.stream.icon}async onOpen(){this.log.debug(`Opening stream view for: ${this.stream.name}`);let e=this.containerEl.children[1];e.empty(),e.addClass("streams-view-container"),e.createDiv("streams-view-header").createEl("h2",{text:`${this.stream.name} stream`}),this.streamContentEl=e.createDiv("streams-view-content"),await this.loadInitialContent(),this.loadMoreTrigger=e.createDiv("streams-view-scroll-trigger"),this.setupInfiniteScroll()}setupInfiniteScroll(){this.log.debug(`Setting up infinite scroll for: ${this.stream.name}`),this.observer&&(this.observer.disconnect(),this.observer=null),this.observer=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&!this.isLoading&&!this.noMoreContent&&(this.log.debug(`Trigger element intersection detected: ${t.intersectionRatio.toFixed(2)}`),this.triggerLoadMore())})},{threshold:[0,.1,.5,1],rootMargin:"300px 0px"}),this.observer.observe(this.loadMoreTrigger),this.log.debug("Intersection observer started")}triggerLoadMore(){this.log.debug("Triggering load more content"),this.loadMoreContent()}async loadInitialContent(){this.isLoading=!0,this.log.debug(`Loading initial content for stream: ${this.stream.name}`);try{let e=new Date,t=await this.getStreamFiles();if(t.length===0){this.log.debug("No stream files found, showing empty state"),this.renderEmptyState(),this.isLoading=!1;return}let i=t.sort((d,c)=>c.date.getTime()-d.date.getTime()),a=i[0];this.log.debug(`Loading most recent file: ${a.file.path}`);let n=await this.app.vault.cachedRead(a.file);this.renderDateContent(a.date,n),this.olderDates.push(a.date);let s=`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`,o=i.some(d=>d.date.getFullYear()===e.getFullYear()&&d.date.getMonth()===e.getMonth()&&d.date.getDate()===e.getDate())}catch(e){this.log.error("Error loading initial content:",e),this.renderEmptyState()}this.isLoading=!1,this.log.debug("Initial content loading complete")}async loadMoreContent(){if(this.isLoading||this.noMoreContent){this.log.debug(`Load more aborted: ${this.isLoading?"Already loading":"No more content"}`);return}this.isLoading=!0,this.log.debug("Loading more content...");try{let e=this.olderDates[this.olderDates.length-1],t=e.getTime();this.log.debug(`Looking for content older than: ${e.toISOString()}`);let n=(await this.getStreamFiles()).sort((o,d)=>d.date.getTime()-o.date.getTime()).filter(o=>o.date.getTime()<t);this.log.debug(`Found ${n.length} older files to load`);let s=n.slice(0,5);if(s.length>0){for(let o of s){this.log.debug(`Loading file: ${o.file.path}`);let d=await this.app.vault.cachedRead(o.file);this.renderDateContent(o.date,d),this.olderDates.push(o.date)}this.noMoreContent=n.length<=s.length,this.noMoreContent&&(this.log.debug("No more content to load after this batch"),this.addEndMarker())}else this.noMoreContent=!0,this.log.debug("No more content to load"),this.addEndMarker()}catch(e){this.log.error("Error loading more content:",e)}finally{this.isLoading=!1,this.log.debug("Loading more content complete")}}addEndMarker(){let e=this.streamContentEl.createDiv("streams-view-end-marker");e.textContent="End of stream"}async getStreamFiles(){if(!this.app.vault.getAbstractFileByPath(this.stream.folder))return[];let t=[],i=s=>{let o=s.name.match(/^(\d{4})-(\d{2})-(\d{2})\.md$/);if(o){let d=parseInt(o[1]),c=parseInt(o[2])-1,h=parseInt(o[3]),m=new Date(d,c,h);isNaN(m.getTime())||t.push({file:s,date:m})}},a=this.app.vault.getMarkdownFiles(),n=this.stream.folder+"/";for(let s of a)s.path.startsWith(n)&&i(s);return t}renderDateContent(e,t){let i=e.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"}),a=this.streamContentEl.createDiv("streams-view-date-section"),n=a.createDiv("streams-view-date-header");n.createEl("h3",{text:i}),n.addEventListener("click",()=>{this.openDateFile(e)});let s=a.createDiv("streams-view-date-content"),o=`${this.stream.folder}/${this.formatDateForFilename(e)}.md`;x.MarkdownRenderer.render(this.app,t,s,o,this),this.processEmbeds(s,o)}processEmbeds(e,t){e.querySelectorAll(".internal-embed[src]").forEach(async a=>{let n=a.getAttribute("src");if(n)try{let s=this.app.metadataCache.getFirstLinkpathDest(n,t);if(s&&s.extension&&["png","jpg","jpeg","gif","svg","webp"].includes(s.extension.toLowerCase())){a.empty(),a.addClass("is-loaded");let o=document.createElement("img");o.src=this.app.vault.getResourcePath(s),a.appendChild(o)}}catch(s){this.log.error("Error processing embed:",s)}})}renderEmptyState(){this.streamContentEl.createDiv("streams-view-empty").createEl("p",{text:"No content found for this stream."})}async openDateFile(e){let t=`${this.formatDateForFilename(e)}.md`,i=`${this.stream.folder}/${t}`,a=this.app.vault.getAbstractFileByPath(i);a&&a instanceof x.TFile&&await this.app.workspace.openLinkText(i,"",!1)}getState(){return{streamId:this.stream.id}}async setState(e){var t;if(e.streamId!==this.stream.id){this.log.debug(`Stream changed from ${this.stream.id} to ${e.streamId}`),this.isLoading=!1,this.noMoreContent=!1,this.olderDates=[],this.observer&&(this.observer.disconnect(),this.observer=null);try{let a=this.app.plugins.plugins.streams;if((t=a==null?void 0:a.settings)!=null&&t.streams){let n=a.settings.streams.find(s=>s.id===e.streamId);if(n){n.viewIcon||(n.viewIcon=n.icon),this.stream=n,this.log.debug(`Rebuilding UI for stream: ${this.stream.name}`);let s=this.containerEl.children[1];s.empty(),s.addClass("streams-view-container"),s.createDiv("streams-view-header").createEl("h2",{text:`${this.stream.name} Stream`}),this.streamContentEl=s.createDiv("streams-view-content"),await this.loadInitialContent(),this.loadMoreTrigger=s.createDiv("streams-view-scroll-trigger"),this.setupInfiniteScroll()}}}catch(i){this.log.error("Error accessing plugin:",i)}}}async onClose(){this.log.debug(`Closing stream view for: ${this.stream.name}`),this.observer&&(this.observer.disconnect(),this.observer=null)}formatDateForFilename(e){let t=e.getFullYear(),i=String(e.getMonth()+1).padStart(2,"0"),a=String(e.getDate()).padStart(2,"0");return`${t}-${i}-${a}`}};var G=require("obsidian");var P=class{constructor(r,e){this.app=r,this.stream=e,this.log=new u}async execute(){let r=this.findExistingView();if(r){this.app.workspace.revealLeaf(r.leaf);return}try{let e=this.getLeaf();await e.setViewState({type:T,state:{streamId:this.stream.id}}),this.app.workspace.revealLeaf(e)}catch(e){this.log.error("Error opening stream view:",e),new G.Notice("Failed to open stream view")}}findExistingView(){let r=this.app.workspace.getLeavesOfType(T);for(let e of r){let t=e.view;if(t&&t.getState().streamId===this.stream.id)return t}return null}getLeaf(){let r=this.app.workspace.getLeavesOfType(T);if(r.length>0)return r[0];let e=this.app.workspace.getRightLeaf(!1);return e||this.app.workspace.getLeaf()}};var Z={streams:[],showCalendarComponent:!0,reuseCurrentTab:!1},W=class extends f.Plugin{constructor(){super(...arguments);this.ribbonIconsByStream=new Map;this.commandsByStreamId=new Map;this.viewCommandsByStreamId=new Map;this.calendarComponents=new Map}async onload(){this.log=new u("Streams"),await this.loadSettings(),this.registerPluginViews(),this.registerEventHandlers(),this.initializeAllRibbonIcons(),this.initializeStreamCommands(),this.initializeMobileIntegration(),this.registerCalendarCommands(),this.registerLogCommands(),this.addSettingTab(new A(this.app,this)),this.initializeActiveView(),this.logInitialState(),this.log.info("Streams plugin loaded")}registerLogCommands(){this.addCommand({id:"toggle-logging",name:"Toggle debug logging",callback:()=>{this.log.isEnabled()?(this.log.off(),new f.Notice("Streams logging disabled")):(this.log.on(0),new f.Notice("Streams logging enabled (DEBUG level)"))}})}logInitialState(){this.log.debug("=== INITIAL STREAM RIBBON STATES ==="),this.settings.streams.forEach(e=>{this.log.debug(`Stream ${e.id} (${e.name}): Today=${e.showTodayInRibbon}, View=${e.showFullStreamInRibbon}`)}),this.log.debug("===================================")}registerPluginViews(){this.registerView(b,e=>new L(e,this.app,"",{id:"",name:"",folder:"",icon:"calendar",viewIcon:"list",showTodayInRibbon:!1,showFullStreamInRibbon:!1,addCommand:!1,addViewCommand:!1,showTodayBorder:!0,showViewBorder:!0,todayBorderColor:"var(--text-accent)",viewBorderColor:"var(--text-success)"},new Date)),this.registerView(T,e=>this.createStreamViewFromState(e))}createStreamViewFromState(e){var n;let t=e.getViewState(),i=(n=t==null?void 0:t.state)==null?void 0:n.streamId,a=this.settings.streams.find(s=>s.id===i);return!a&&this.settings.streams.length>0?a=this.settings.streams[0]:a||(a={id:"default",name:"Default Stream",folder:"",icon:"file-text",viewIcon:"list",showTodayInRibbon:!1,showFullStreamInRibbon:!1,addCommand:!1,addViewCommand:!1,showTodayBorder:!0,showViewBorder:!0,todayBorderColor:"var(--text-accent)",viewBorderColor:"var(--text-success)"}),new O(e,this.app,a)}initializeAllRibbonIcons(){this.settings.streams.forEach(e=>{this.createStreamIcons(e)}),this.updateAllIconVisibility()}createStreamIcons(e){let t=this.ribbonIconsByStream.get(e.id);t||(t={},this.ribbonIconsByStream.set(e.id,t)),t.today||(this.log.debug(`Creating Today icon for stream ${e.id}, initial visibility: ${e.showTodayInRibbon}`),t.today=this.addRibbonIcon(e.icon,`Streams: ${e.name}, today`,()=>{new D(this.app,e,this.settings.reuseCurrentTab).execute()}),this.updateIconVisibility(t.today,!1),e.showTodayBorder&&this.applyTodayIconStyles(t.today,e)),t.view||(this.log.debug(`Creating View icon for stream ${e.id}, initial visibility: ${e.showFullStreamInRibbon}`),t.view=this.addRibbonIcon(e.viewIcon||e.icon,`Streams: ${e.name}, full`,()=>{new P(this.app,e).execute()}),this.updateIconVisibility(t.view,!1),e.showViewBorder&&this.applyViewIconStyles(t.view,e))}applyTodayIconStyles(e,t){if(e)try{e.classList.add("streams-today-icon-border"),t.todayBorderColor&&t.todayBorderColor!=="default"&&e.setAttribute("data-border-color",t.todayBorderColor)}catch(i){this.log.error("Error applying today icon styles:",i)}}applyViewIconStyles(e,t){if(e)try{e.classList.add("streams-view-icon-border"),t.viewBorderColor&&t.viewBorderColor!=="default"&&e.setAttribute("data-border-color",t.viewBorderColor)}catch(i){this.log.error("Error applying view icon styles:",i)}}updateAllIconVisibility(){this.settings.streams.forEach(e=>{this.updateStreamIconVisibility(e)})}updateStreamIconVisibility(e){let t=this.ribbonIconsByStream.get(e.id);t&&(t.today&&this.updateIconVisibility(t.today,e.showTodayInRibbon),t.view&&this.updateIconVisibility(t.view,e.showFullStreamInRibbon))}updateStreamTodayIcon(e){let t=this.ribbonIconsByStream.get(e.id);t&&t.today&&(t.today.classList.toggle("streams-today-icon-border",e.showTodayBorder),e.showTodayBorder&&this.applyTodayIconStyles(t.today,e))}updateStreamViewIcon(e){let t=this.ribbonIconsByStream.get(e.id);t&&t.view&&(t.view.classList.toggle("streams-view-icon-border",e.showViewBorder),e.showViewBorder&&this.applyViewIconStyles(t.view,e))}removeAllRibbonIcons(){this.ribbonIconsByStream.forEach(e=>{e.today&&e.today.detach(),e.view&&e.view.detach()}),this.ribbonIconsByStream.clear()}onunload(){this.log.info("Unloading Streams plugin"),this.cleanupResources(),this.log.info("Streams plugin unloaded")}cleanupResources(){this.removeAllRibbonIcons(),this.calendarComponents.forEach(e=>{e.destroy()}),this.calendarComponents.clear(),this.commandsByStreamId.clear(),this.viewCommandsByStreamId.clear()}registerEventHandlers(){this.registerEvent(this.app.workspace.on("active-leaf-change",e=>{this.log.debug("Active leaf changed"),(e==null?void 0:e.view)instanceof f.MarkdownView?this.updateCalendarComponent(e):(e==null?void 0:e.view.getViewType())===b&&this.updateCalendarComponentForCreateView(e)})),this.registerEvent(this.app.workspace.on("streams-create-file-state-changed",e=>{this.log.debug("Create file state changed, updating calendar component"),e&&e.leaf&&this.updateCalendarComponentForCreateView(e.leaf)}))}initializeMobileIntegration(){f.Platform.isAndroidApp&&this.registerEvent(this.app.workspace.on("file-menu",(e,t)=>{t&&this.settings.streams.length>0&&e.addItem(i=>{i.setTitle("Insert link into stream").setIcon("link").onClick(async()=>{await this.showStreamSelectionModal(t.path)})})}))}initializeActiveView(){var t;let e=(t=this.app.workspace.getActiveViewOfType(f.MarkdownView))==null?void 0:t.leaf;e&&this.updateCalendarComponent(e)}updateCalendarComponent(e){var n;let i=(n=e.view.file)==null?void 0:n.path;if(this.log.debug("Updating calendar component for file:",i),this.calendarComponents.forEach(s=>{s.destroy()}),this.calendarComponents.clear(),!i||!this.settings.showCalendarComponent){this.log.debug(`Not creating calendar component. File path: ${i?"exists":"missing"}, Component enabled: ${this.settings.showCalendarComponent}`);return}this.log.debug(`Looking for stream matching file: ${i}`),this.log.debug("Available streams:",this.settings.streams.map(s=>({name:s.name,folder:s.folder})));let a=this.settings.streams.find(s=>{if(!s.folder||s.folder.trim()==="")return!1;let o=i.split(/[/\\]/).filter(Boolean),d=s.folder.split(/[/\\]/).filter(Boolean);if(d.length===0)return!1;let c=d.every((h,m)=>m>=o.length?!1:d[m]===o[m]);return this.log.debug(`Checking stream "${s.name}" (${s.folder}):`,{isInStreamFolder:c,normalizedFilePath:o,normalizedStreamPath:d}),c});if(a){this.log.debug(`File belongs to stream: ${a.name} (${a.folder})`);let s=new k(e,a,this.app,this.settings.reuseCurrentTab),o=i||crypto.randomUUID();this.calendarComponents.set(o,s),this.log.debug("Calendar component created successfully")}else this.log.debug("File does not belong to any stream")}async showStreamSelectionModal(e){new N(this.app,this.settings.streams,async i=>{i&&await this.insertLinkIntoStream(i,e)}).open()}async insertLinkIntoStream(e,t){try{let i=new Date,a=i.getFullYear(),n=String(i.getMonth()+1).padStart(2,"0"),s=String(i.getDate()).padStart(2,"0"),o=`${a}-${n}-${s}.md`,d=`${e.folder}/${o}`,c=this.app.vault.getAbstractFileByPath(d);if((!c||!(c instanceof f.TFile))&&(c=await this.app.vault.create(d,"")),c instanceof f.TFile){let h=this.app.vault.getAbstractFileByPath(t);if(!h||!(h instanceof f.TFile)){new f.Notice("Could not find file to link to");return}let m=this.app.fileManager.generateMarkdownLink(h,d);await this.app.vault.append(c,(await this.app.vault.read(c)).length>0?`
`+m:m),new f.Notice(`Added link to ${e.name}`)}}catch(i){this.log.error("Error inserting link:",i),new f.Notice("Failed to insert link into stream")}}updateCalendarComponentForCreateView(e){let t=e.view;if(!t){this.log.debug("Cannot update calendar component: no view found");return}if(this.calendarComponents.forEach(i=>{i.destroy()}),this.calendarComponents.clear(),!this.settings.showCalendarComponent){this.log.debug("Calendar component is disabled in settings");return}try{let i=t.getState();if(!i){this.log.debug("No state found in create file view");return}if(!i.stream||!i.date){this.log.debug("Missing stream or date in create file view state",{hasStream:!!i.stream,hasDate:!!i.date});return}let a=i.stream,n=i.date,s=new Date(n);this.log.debug("Creating calendar component for create file view:",{stream:a.name,date:s.toISOString()});let o=new k(e,a,this.app,this.settings.reuseCurrentTab),d=n.split("T")[0];o.setCurrentViewedDate(d);let c="create-file-view-"+a.id;this.calendarComponents.set(c,o),this.log.debug("Calendar component for create file view created successfully")}catch(i){this.log.error("Error setting up calendar component for create view:",i)}}addStreamViewCommand(e){let t=e.id;if(this.viewCommandsByStreamId.has(t))return;let i=`view-${t}`;this.addCommand({id:i,name:`Open full view: ${e.name}`,callback:()=>{new P(this.app,e).execute()}}),this.viewCommandsByStreamId.set(t,i)}removeStreamViewCommand(e){let t=this.viewCommandsByStreamId.get(e);t&&(this.removeCommand(t),this.viewCommandsByStreamId.delete(e),this.log.debug(`Removed View Full Stream command for stream ${e}`))}async loadSettings(){this.settings=Object.assign({},Z,await this.loadData()),this.settings.showCalendarComponent===void 0&&(this.settings.showCalendarComponent=!0),this.settings.reuseCurrentTab===void 0&&(this.settings.reuseCurrentTab=!1),this.settings.streams.forEach(e=>{this.migrateStreamSettings(e)})}migrateStreamSettings(e){e.viewIcon||(e.viewIcon=e.icon),e.showInRibbon!==void 0&&e.showTodayInRibbon===void 0&&(e.showTodayInRibbon=e.showInRibbon,delete e.showInRibbon),e.showViewInRibbon!==void 0&&e.showFullStreamInRibbon===void 0&&(e.showFullStreamInRibbon=e.showViewInRibbon,delete e.showViewInRibbon),e.showTodayInRibbon===void 0&&(e.showTodayInRibbon=!1),e.showFullStreamInRibbon===void 0&&(e.showFullStreamInRibbon=!1),e.showTodayBorder===void 0&&(e.showTodayBorder=!0),e.showViewBorder===void 0&&(e.showViewBorder=!0),e.todayBorderColor===void 0&&(e.todayBorderColor="var(--text-accent)"),e.viewBorderColor===void 0&&(e.viewBorderColor="var(--text-success)")}async saveSettings(e=!1){this.log.debug("Saving settings...");try{await this.saveData(this.settings),this.log.debug("Settings saved successfully"),this.logSavedSettings(),this.updateAllIconVisibility()}catch(t){this.log.error("Error saving settings:",t)}}logSavedSettings(){this.log.debug("=== SAVED STREAM STATES ==="),this.settings.streams.forEach(e=>{this.log.debug(`Stream ${e.id} (${e.name}): Today=${e.showTodayInRibbon}, View=${e.showFullStreamInRibbon}`)}),this.log.debug("==========================")}toggleStreamCommand(e){this.removeStreamCommand(e.id),e.addCommand&&this.addStreamCommand(e),this.log.debug(`Toggled Open Today command for stream ${e.id} to ${e.addCommand}`)}toggleStreamViewCommand(e){this.removeStreamViewCommand(e.id),e.addViewCommand&&this.addStreamViewCommand(e),this.log.debug(`Toggled View Full Stream command for stream ${e.id} to ${e.addViewCommand}`)}addStreamCommand(e){let t=`open-${e.id}`;this.removeStreamCommand(e.id);let i=this.addCommand({id:t,name:`${e.name}, today`,callback:async()=>{await new D(this.app,e,this.settings.reuseCurrentTab).execute()}});this.commandsByStreamId.set(e.id,t)}removeStreamCommand(e){let t=this.commandsByStreamId.get(e);t&&(this.removeCommand(t),this.commandsByStreamId.delete(e),this.log.debug(`Removed Open Today command for stream ${e}`))}updateIconVisibility(e,t){let i=!e.classList.contains("streams-icon-hidden")&&!e.classList.contains("streams-plugin-hidden"),a=e.getAttribute("data-stream-id"),n=e.getAttribute("data-icon-type");if(t){if(e.classList.remove("streams-plugin-hidden"),e.classList.remove("streams-icon-hidden"),e.classList.add("streams-icon-visible"),!document.body.contains(e)){let o=this.app.workspace.containerEl.querySelector(".side-dock-ribbon");o&&o.appendChild(e)}if(a){let o=this.settings.streams.find(d=>d.id===a);o&&(n==="today"?this.applyTodayIconStyles(e,o):n==="view"&&this.applyViewIconStyles(e,o))}}else e.classList.add("streams-icon-hidden"),e.classList.add("streams-plugin-hidden");let s=!e.classList.contains("streams-icon-hidden")&&!e.classList.contains("streams-plugin-hidden");this.log.debug(`Icon visibility update: ${i?"visible":"hidden"} \u2192 ${s?"visible":"hidden"}`)}initializeStreamCommands(){this.log.debug("Initializing stream commands..."),this.settings.streams.forEach(e=>{e.addCommand&&(this.addStreamCommand(e),this.log.debug(`Added Open Today command for stream ${e.name}`)),e.addViewCommand&&(this.addStreamViewCommand(e),this.log.debug(`Added View Full Stream command for stream ${e.name}`))})}registerCalendarCommands(){this.addCommand({id:"toggle-calendar-component",name:"Toggle calendar component",callback:()=>{this.settings.showCalendarComponent=!this.settings.showCalendarComponent,this.saveSettings(),this.refreshAllCalendarComponents(),new f.Notice(`Calendar component ${this.settings.showCalendarComponent?"shown":"hidden"}`)}})}refreshAllCalendarComponents(){var i,a;if(this.log.debug(`Refreshing all calendar components. Current setting: ${this.settings.showCalendarComponent}`),this.calendarComponents.forEach(n=>{n.destroy()}),this.calendarComponents.clear(),!this.settings.showCalendarComponent){this.log.debug("Calendar components will remain hidden due to setting");return}let e=!1;this.log.debug("Recreating calendar components based on current view");let t=(i=this.app.workspace.getActiveViewOfType(f.MarkdownView))==null?void 0:i.leaf;if(t&&(this.log.debug("Active view is a markdown view, creating component if applicable"),this.updateCalendarComponent(t),this.calendarComponents.size>0&&(e=!0,this.log.debug("Calendar component successfully created for markdown view"))),!e&&this.app.workspace.activeLeaf){let n=this.app.workspace.activeLeaf;((a=n.view)==null?void 0:a.getViewType())===b&&(this.log.debug("Active view is a create file view, creating component"),this.updateCalendarComponentForCreateView(n),e=this.calendarComponents.size>0)}e||this.log.debug("No calendar component was created during refresh. This may be because no suitable view is active or the current file is not part of a stream.")}};

/* nosourcemap */